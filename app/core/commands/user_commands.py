from pyrogram import enums

from app.core.keyboards.auth_keyboard import auth_keyboard
from app.core.keyboards.user_keyboard import user_profile_keyboard
from app.core.repositories.users import UsersRepository
from app.enums.user import UpdateUserStates
from app.settings.config_settings import user_state, user_update


async def user_profile_command(client, message):
    user = await UsersRepository().user_is_verified(chat_id=message.chat.id)
    if user:
        await message.reply(
            "–≠—Ç–æ <b>–í–∞—à–µ –ø—Ä–æ—Ñ–∏–ª—å!</b> ‚úçÔ∏è\n\n"
            f"–í–∞—à–µ –∏–º—è: <b>{user.name}</b>\n"
            f"–í–∞—à–∞ –ø–æ—á—Ç–∞: <b>{user.email}</b>\n\n"
            "–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å:\n"
            " 1. –°–≤–æ—ë –∏–º—è ü´•\n"
            " 2. –°–≤–æ—é –ø–æ—á—Ç—É üì©",
            parse_mode=enums.ParseMode.HTML, reply_markup=user_profile_keyboard()
        )
    else:
        await message.reply(
            "üî¥\n\n"
            "<b>–í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É!</b>\n\n"
            "–î–ª—è —ç—Ç–æ–≥–æ <b><i>–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ</i></b> –≤ <b>–°–ò–°–¢–ï–ú–£</b>",
            parse_mode=enums.ParseMode.HTML, reply_markup=auth_keyboard())


async def user_update_name(client, message):
    user_id = message.from_user.id
    state = user_state.get_state(user_id)

    if state == UpdateUserStates.WAITING_FOR_UPDATE_NAME:
        user_name = message.text
        user_update["name"] = user_name
        updated_user = await UsersRepository().update_user(
            chat_id=message.chat.id,
            user_data=user_update
        )
        if updated_user:
            await message.reply(
                f"<b>–í–∞—à–µ –Ω–æ–≤–æ–µ –ò–ú–Ø: {user_name}</b>‚úÖ\n\n",
                parse_mode=enums.ParseMode.HTML
            )
            await user_profile_command(client, message)


async def user_update_email(client, message):
    user_id = message.from_user.id
    state = user_state.get_state(user_id)

    if state == UpdateUserStates.WAITING_FOR_UPDATE_EMAIL:
        user_email = message.text
        user_update["email"] = user_email
        updated_user = await UsersRepository().update_user(
            chat_id=message.chat.id,
            user_data=user_update
        )
        if updated_user:
            await message.reply(
                f"<b>–í–∞—à–∞ –Ω–æ–≤–∞—è –ü–æ—á—Ç–∞: {user_email}</b>‚úÖ\n\n",
                parse_mode=enums.ParseMode.HTML
            )
            await user_profile_command(client, message)
