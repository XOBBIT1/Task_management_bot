from pyrogram import enums, Client
from pyrogram.types import Message

from app.core.keyboards.auth_keyboard import auth_keyboard
from app.core.keyboards.user_keyboard import user_profile_keyboard
from app.core.repositories.users import UsersRepository
from app.enums.user import UpdateUserStates
from app.settings.config_settings import user_state, user_update


async def user_profile_command(client: Client, message: Message):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –µ–≥–æ —Ç–µ–∫—É—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏, —Ç–∞–∫–∏–º–∏ –∫–∞–∫ –∏–º—è –∏ email.
    –¢–∞–∫–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–±–Ω–æ–≤–∏—Ç—å —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        client (Client): –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∏–µ–Ω—Ç–∞ Pyrogram, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤—ã–∑–≤–∞–≤—à–µ–≥–æ –∫–æ–º–∞–Ω–¥—É.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç:
        –°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ –∏ –ø–æ—á—Ç—ã.
        –í —Å–ª—É—á–∞–µ –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.
    """
    user = await UsersRepository().user_is_verified(chat_id=message.chat.id)
    if user:
        await message.reply(
            "–≠—Ç–æ <b>–í–∞—à–µ –ø—Ä–æ—Ñ–∏–ª—å!</b> ‚úçÔ∏è\n\n"
            f"–í–∞—à–µ –∏–º—è: <b>{user.name}</b>\n"
            f"–í–∞—à–∞ –ø–æ—á—Ç–∞: <b>{user.email}</b>\n\n"
            "–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å:\n"
            " 1. –°–≤–æ—ë –∏–º—è ü´•\n"
            " 2. –°–≤–æ—é –ø–æ—á—Ç—É üì©",
            parse_mode=enums.ParseMode.HTML, reply_markup=user_profile_keyboard()
        )
    else:
        await message.reply(
            "üî¥\n\n"
            "<b>–í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É!</b>\n\n"
            "–î–ª—è —ç—Ç–æ–≥–æ <b><i>–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ</i></b> –≤ <b>–°–ò–°–¢–ï–ú–£</b>",
            parse_mode=enums.ParseMode.HTML, reply_markup=auth_keyboard())


async def user_update_name(client: Client, message: Message):
    """
   –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤–æ–µ –∏–º—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.

   –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
       client (Client): –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∏–µ–Ω—Ç–∞ Pyrogram, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
       message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –Ω–æ–≤–æ–µ –∏–º—è.

   –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç:
       –°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º —É—Å–ø–µ—à–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω–∏.
   """
    user_id = message.from_user.id
    state = user_state.get_state(user_id)

    if state == UpdateUserStates.WAITING_FOR_UPDATE_NAME:
        user_name = message.text
        user_update["name"] = user_name
        updated_user = await UsersRepository().update_user(
            chat_id=message.chat.id,
            user_data=user_update
        )
        if updated_user:
            await message.reply(
                f"<b>–í–∞—à–µ –Ω–æ–≤–æ–µ –ò–ú–Ø: {user_name}</b>‚úÖ\n\n",
                parse_mode=enums.ParseMode.HTML
            )
            await user_profile_command(client, message)


async def user_update_email(client: Client, message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—á—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤—ã–π email –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        client (Client): –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∏–µ–Ω—Ç–∞ Pyrogram, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –Ω–æ–≤—ã–π email.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç:
        –°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º —É—Å–ø–µ—à–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—á—Ç—ã.
    """
    user_id = message.from_user.id
    state = user_state.get_state(user_id)

    if state == UpdateUserStates.WAITING_FOR_UPDATE_EMAIL:
        user_email = message.text
        user_update["email"] = user_email
        updated_user = await UsersRepository().update_user(
            chat_id=message.chat.id,
            user_data=user_update
        )
        if updated_user:
            await message.reply(
                f"<b>–í–∞—à–∞ –Ω–æ–≤–∞—è –ü–æ—á—Ç–∞: {user_email}</b>‚úÖ\n\n",
                parse_mode=enums.ParseMode.HTML
            )
            await user_profile_command(client, message)
