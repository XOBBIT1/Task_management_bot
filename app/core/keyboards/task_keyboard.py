from pyrogram import types


def user_tasks_keyboard():
    """
      –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏.

      –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
          types.InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏, –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–¥–∞—á –∏ –≤—ã—Ö–æ–¥–∞.
    """
    buttons = [
        [types.InlineKeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É üñä", callback_data="create_task")],
        [types.InlineKeyboardButton(text="–ú–æ–∏ –∑–∞–¥–∞—á–∏ üìù", callback_data="my_tasks")],
        [types.InlineKeyboardButton(text="–í—ã—Ö–æ–¥ üîú", callback_data="back")],
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def all_tasks_keyboard(task_id):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–µ–π.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        task_id (int): –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–¥–∞—á–∏.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        types.InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏, —É–¥–∞–ª–µ–Ω–∏—è –∏ –≤—ã—Ö–æ–¥–∞.
    """
    buttons = [
        [types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–∞—á—É ‚úçÔ∏è", callback_data=f"change_task_{task_id}")],
        [types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É ‚ùå", callback_data=f"delete_task_{task_id}")],
        [types.InlineKeyboardButton(text="–í—ã—Ö–æ–¥ üîú", callback_data="back")],
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def update_task_keyboard(task_id):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–¥–∞—á–∏.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        task_id (int): –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–¥–∞—á–∏.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        types.InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è, –æ–ø–∏—Å–∞–Ω–∏—è, —Å—Ç–∞—Ç—É—Å–∞, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –∏ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏.
    """
    buttons = [
        [types.InlineKeyboardButton(text="‚úçÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ ‚úçÔ∏è", callback_data="update_task_name")],
        [types.InlineKeyboardButton(text="üìñ –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ üìñ", callback_data="update_task_desc")],
        [types.InlineKeyboardButton(text="üö• –ü–æ–º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å üö•", callback_data="update_task_status")],
        [types.InlineKeyboardButton(text="üîù –ü–æ–º–µ–Ω—è—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç üîù", callback_data="update_task_priority")],
        [types.InlineKeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É ‚ùå", callback_data=f"delete_task_{task_id}")],
        [types.InlineKeyboardButton(text="–í—ã—Ö–æ–¥ üîú", callback_data="back")],
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def update_task_status_keyboard(task_id):
    """
       –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏.

       –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
           task_id (int): –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–¥–∞—á–∏.

       –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
           types.InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏.
    """
    buttons = [
        [types.InlineKeyboardButton(text="üî¥ –ù–æ–≤–∞—è üî¥", callback_data=f"status_NEW_{task_id}")],
        [types.InlineKeyboardButton(text="üü° –í –ø—Ä–æ—Ü–µ—Å—Å–µ üü°", callback_data=f"status_INPROGRESS_{task_id}")],
        [types.InlineKeyboardButton(text="üü¢ –ó–∞–≤–µ—Ä—à–µ–Ω–∞ üü¢", callback_data=f"status_COMPLETED_{task_id}")],
        [types.InlineKeyboardButton(text="–í—ã—Ö–æ–¥ üîú", callback_data="back")],
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def update_task_priority_keyboard(task_id):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –∑–∞–¥–∞—á–∏.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        task_id (int): –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–¥–∞—á–∏.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        types.InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –∑–∞–¥–∞—á–∏.
    """
    buttons = [
        [types.InlineKeyboardButton(text="–ù–∏–∑–∫–∏–π", callback_data=f"priority_LOW_{task_id}")],
        [types.InlineKeyboardButton(text="–°—Ä–µ–¥–Ω–∏–π", callback_data=f"priority_MIDDLE_{task_id}")],
        [types.InlineKeyboardButton(text="–í—ã—Å–æ–∫–∏–π", callback_data=f"priority_HIGH_{task_id}")],
        [types.InlineKeyboardButton(text="–í—ã—Ö–æ–¥ üîú", callback_data="back")],
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard
