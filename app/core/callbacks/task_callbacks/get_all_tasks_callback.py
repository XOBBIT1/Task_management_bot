from pyrogram import enums, Client, types

from app.core.callbacks.task_callbacks.main_menu_callback import tasks_main_menu_callback
from app.core.keyboards.auth_keyboard import auth_keyboard
from app.core.keyboards.task_keyboard import all_tasks_keyboard
from app.core.repositories.tasks import TasksRepository
from app.core.repositories.users import UsersRepository


async def get_all_tasks_callback(client: Client, callback_query: types.CallbackQuery):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback-–∑–∞–ø—Ä–æ—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –∏–∑–≤–ª–µ–∫–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–¥–∞—á –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ö –≤ –≤–∏–¥–µ —Å–æ–æ–±—â–µ–Ω–∏–π.
    –ï—Å–ª–∏ –∑–∞–¥–∞—á –Ω–µ—Ç, —É–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∑–∞–¥–∞—á. –ï—Å–ª–∏
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏–ª–∏ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.

    Args:
        client (Client): –ö–ª–∏–µ–Ω—Ç Pyrogram –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å Telegram API.
        callback_query: –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞, –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
    """
    user = await UsersRepository().user_is_verified(chat_id=callback_query.message.chat.id)
    tasks = await TasksRepository().get_all_tasks()
    if user:
        if tasks:
            await callback_query.message.reply(
                "<b>–í–ê–®–ò –ó–ê–î–ê–ß–ò üìã: </b>\n\n", parse_mode=enums.ParseMode.HTML)
            for task in tasks:
                await callback_query.message.reply(
                    f"<b><i>–ù–∞–∑–≤–∞–Ω–∏–µ: {task.task_name}</i></b>\n"
                    f"<i>–û–ø–∏—Å—Å–∞–Ω–∏–µ: {task.task_descriptions}</i>\n"
                    f"<b><i>–°—Ç–∞—Ç—É—Å: {task.readable_status}</i></b>\n"
                    f"<b><i>–ü—Ä–µ–æ—Ä–∏—Ç–µ—Ç: {task.readable_priority}</i></b>\n",
                    parse_mode=enums.ParseMode.HTML, reply_markup=all_tasks_keyboard(task.id)
                )
        else:
            await callback_query.message.reply(
                "<b>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–¥–∞—á üò• </b>\n\n",
                parse_mode=enums.ParseMode.HTML)
            await tasks_main_menu_callback(client, callback_query)
    else:
        await callback_query.message.reply(
            "üî¥\n\n"
            "<b>–í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É!</b>\n\n"
            "–î–ª—è —ç—Ç–æ–≥–æ <b><i>–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ</i></b> –≤ <b>–°–ò–°–¢–ï–ú–£</b>",
            parse_mode=enums.ParseMode.HTML, reply_markup=auth_keyboard())
