from pyrogram import enums

from app.core.keyboards.auth_keyboard import auth_keyboard
from app.core.keyboards.task_keyboard import user_tasks_keyboard, all_tasks_keyboard
from app.core.repositories.tasks import TasksRepository
from app.core.repositories.users import UsersRepository


async def tasks_main_menu_callback(client, callback_query):
    user = await UsersRepository().user_is_verified(chat_id=callback_query.message.chat.id)
    if user:
        await callback_query.message.reply(
            "<b>–ú–µ–Ω—é –ó–ê–î–ê–ß üìã</b>\n\n"
            "–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ:\n"
            "üñãüñåüñç <i>–°–æ–∑–¥–∞–≤–∞—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á–∞–º–∏.\n</i>"
            "üìä <i>–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á.\n</i>",
            parse_mode=enums.ParseMode.HTML, reply_markup=user_tasks_keyboard()
        )
    else:
        await callback_query.message.reply(
            "üî¥\n\n"
            "<b>–í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É!</b>\n\n"
            "–î–ª—è —ç—Ç–æ–≥–æ <b><i>–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ</i></b> –≤ <b>–°–ò–°–¢–ï–ú–£</b>",
            parse_mode=enums.ParseMode.HTML, reply_markup=auth_keyboard())


async def get_all_tasks_callback(client, callback_query):
    user = await UsersRepository().user_is_verified(chat_id=callback_query.message.chat.id)
    tasks = await TasksRepository().get_all_tasks()
    if user:
        if tasks:
            await callback_query.message.reply(
                "<b>–í–ê–®–ò –ó–ê–î–ê–ß–ò üìã: </b>\n\n", parse_mode=enums.ParseMode.HTML)
            for task in tasks:
                await callback_query.message.reply(
                    f"<b><i>–ù–∞–∑–≤–∞–Ω–∏–µ: {task.task_name}</i></b>\n"
                    f"<i>–û–ø–∏—Å—Å–∞–Ω–∏–µ: {task.task_descriptions}</i>\n"
                    f"<b><i>–°—Ç–∞—Ç—É—Å: {task.readable_status}</i></b>\n"
                    f"<b><i>–ü—Ä–µ–æ—Ä–∏—Ç–µ—Ç: {task.readable_priority}</i></b>\n",
                    parse_mode=enums.ParseMode.HTML, reply_markup=all_tasks_keyboard(task.id)
                )
        else:
            await callback_query.message.reply(
                "<b>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–¥–∞—á üò• </b>\n\n",
                parse_mode=enums.ParseMode.HTML)
            await tasks_main_menu_callback(client, callback_query)
    else:
        await callback_query.message.reply(
            "üî¥\n\n"
            "<b>–í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É!</b>\n\n"
            "–î–ª—è —ç—Ç–æ–≥–æ <b><i>–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ</i></b> –≤ <b>–°–ò–°–¢–ï–ú–£</b>",
            parse_mode=enums.ParseMode.HTML, reply_markup=auth_keyboard())
